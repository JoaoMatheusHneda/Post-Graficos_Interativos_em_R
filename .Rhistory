getwd()
blogdown::install_hugo()
install.packages("blogdown")
blogdown::install_hugo()
blogdown::install_hugo(force = TRUE, extended = TRUE)
library("gapminder", lib.loc="~/R/win-library/3.5")
library("plotly", lib.loc="~/R/win-library/3.5")
p <- gapminder %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
gapminder
head(gapminder)
p <- gapminder %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
p
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/gapminderDataFiveYear.csv")
data_2007 <- data[which(data$year == 2007),]
data_2007 <- data_2007[order(data_2007$continent, data_2007$country),]
slope <- 2.666051223553066e-05
data_2007$size <- sqrt(data_2007$pop * slope)
colors <- c('#4AC6B7', '#1972A4', '#965F8A', '#FF7070', '#C61951')
p <- plot_ly(data_2007, x = ~gdpPercap, y = ~lifeExp, color = ~continent, frame = ~year, size = ~size, colors = colors,
type = 'scatter', mode = 'markers', sizes = c(min(data_2007$size), max(data_2007$size)),
marker = list(symbol = 'circle', sizemode = 'diameter',
line = list(width = 2, color = '#FFFFFF')),
text = ~paste('Country:', country, '<br>Life Expectancy:', lifeExp, '<br>GDP:', gdpPercap,
'<br>Pop.:', pop)) %>%
layout(title = 'Life Expectancy v. Per Capita GDP, 2007',
xaxis = list(title = 'GDP per capita (2000 dollars)',
gridcolor = 'rgb(255, 255, 255)',
range = c(2.003297660701705, 5.191505530708712),
type = 'log',
zerolinewidth = 1,
ticklen = 5,
gridwidth = 2),
yaxis = list(title = 'Life Expectancy (years)',
gridcolor = 'rgb(255, 255, 255)',
range = c(36.12621671352166, 91.72921793264332),
zerolinewidth = 1,
ticklen = 5,
gridwith = 2),
paper_bgcolor = 'rgb(243, 243, 243)',
plot_bgcolor = 'rgb(243, 243, 243)')
p
lungDeaths <- cbind(mdeaths, fdeaths)
x=dygraph(lungDeaths) %>% dyRangeSelector() %>% dyOptions(stackedGraph = TRUE)
library(dygraphs)
library(dygraphs)
lungDeaths <- cbind(mdeaths, fdeaths)
x=dygraph(lungDeaths) %>% dyRangeSelector() %>% dyOptions(stackedGraph = TRUE)
x
data()
EuStockMarkets
EuStockMarkets$FTSE
EuStockMarkets[,1]
HoltWinters(EuStockMarkets[,1])
hw <- HoltWinters(EuStockMarkets[,1])
p <- predict(hw, n.ahead = 36, prediction.interval = TRUE)
all <- cbind(EuStockMarkets[,1],p)
dygraph(all, "Deaths from Lung Disease (UK)") %>%
dySeries("ldeaths", label = "Actual") %>%
dySeries(c("p.lwr", "p.fit", "p.upr"), label = "Predicted")
knitr::opts_chunk$set(echo = TRUE)
all
EuStockMarkets[,1]
EuStockMarkets[,1]
p
all <- cbind(ldeaths, p)
all <- cbind(EuStockMarkets[,1],p)
all
as.xls(EuStockMarkets[,1])
plot(sunspot.year)
plot(sunspots)
swiss
economics
plot(economics)
txhousing
wind
library(xls)
library(xts)
data
data()
sample_matrix
as.xts(EuStockMarkets[,1])
EuStockMarkets[,1]
as.zoo(EuStockMarkets[,1])
AirPassengers
plot(AirPassengers)
hw <- HoltWinters(AirPassengers)
hw
p <- predict(hw, n.ahead = 36, prediction.interval = TRUE)
all <- cbind(AirPassengers,p)
all
hw <- HoltWinters(ldeaths)
p <- predict(hw, n.ahead = 36, prediction.interval = TRUE)
all <- cbind(ldeaths, p)
dygraph(all, "Deaths from Lung Disease (UK)") %>%
dySeries("ldeaths", label = "Actual") %>%
dySeries(c("p.lwr", "p.fit", "p.upr"), label = "Predicted")
dygraph
?ldeaths
ldeaths
str(ldeaths)
str(AirPassengers)
hw <- HoltWinters(AirPassengers)
hw <- HoltWinters(ldeaths)
p <- predict(hw, n.ahead = 36, prediction.interval = TRUE)
all <- cbind(ldeaths, p)
all
hw <- HoltWinters(AirPassengers)
p <- predict(hw, n.ahead = 36, prediction.interval = TRUE)
all <- cbind(AirPassengers, p)
dygraph(all, "Deaths from Lung Disease (UK)") %>%
dySeries("ldeaths", label = "Actual") %>%
dySeries(c("p.lwr", "p.fit", "p.upr"), label = "Predicted")
dygraph(all, "Deaths from Lung Disease (UK)") %>%
dySeries("AirPassengers", label = "Actual") %>%
dySeries(c("p.lwr", "p.fit", "p.upr"), label = "Predicted")
?AirPassengers
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-49.267, lat=-25.4102, popup="Museu Oscar Niemeyer")
m
m <- leaflet() %>%
# addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-49.267, lat=-25.4102, popup="Museu Oscar Niemeyer")
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-49.267, lat=-25.4102, popup="Museu Oscar Niemeyer")
m
m %>% addProviderTiles(providers$Stamen.Toner)
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Stamen.TonerLabels)
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Stamen.Toner)
m %>% addProviderTiles(providers$Stamen.TonerLabels)
m %>% addPopups(-49.267, -25.4102,
paste("<b> Museu Oscar Niemeyer </b>",
"Rua Marechal Hermes, 999",
"Curitiba - PR, Centro Cívico"))
m %>% addPopups(-49.267, -25.4102,
paste("<b> Museu Oscar Niemeyer </b>","<br/>",
"Rua Marechal Hermes, 999","<br/>",
"Curitiba - PR, Centro Cívico"))
m %>% addPopups(-49.267, -25.4102,
paste("<b> Museu Oscar Niemeyer </b>","<br/>",
"Rua Marechal Hermes, 999","<br/>",
"Curitiba - PR, Centro Cívico"),
options = popupOptions(closeButton = FALSE))
m %>% addMarkers(-49.267, -25.410, popup = "Museu Oscar Niemeyer")
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-49.267, lat=-25.4102, popup="Museu Oscar Niemeyer", label="Curitiba - PR, Centro Cívico")
m
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=-49.267, lat=-25.4102,label="Museu Oscar Niemeyer </b> Curitiba - PR, Centro Cívico")
m
m <- leaflet() %>%
addTiles() %>%  # Mapa OpenStreetMap
addMarkers(lng=-49.267, lat=-25.4102,label="Museu Oscar Niemeyer")
m
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Stamen.Toner)
m %>% addPopups(-49.267, -25.4102,
paste("<b> Museu Oscar Niemeyer </b>","<br/>",
"Rua Marechal Hermes, 999","<br/>",
"Curitiba - PR, Centro Cívico"))
map <- get_data_from_map(download_map_data("countries/br/br-all"))
library(highcharter)
map <- get_data_from_map(download_map_data("countries/br/br-all"))
map2 <- download_map_data("countries/br/br-all")
# str(map)
xls <- readxl::read_xls(path = "estimativa_TCU_2018_20190213.xls",
sheet = 1,
range = "A1:B28")
colnames(xls) <- c("Estado","Populacao")
library(tidyverse)
dados <- map[,c("woe-name","hc-a2")] %>% left_join(x=.,y=xls, by = c("woe-name" = "Estado"))
xls <- readxl::read_xls(path = "estimativa_TCU_2018_20190213.xls",
sheet = 1,
range = "A1:B28")
getwd()
setwd("~/Desktop/JM/PET-Estatística/Post/Post 2")
xls <- readxl::read_xls(path = "estimativa_TCU_2018_20190213.xls",
sheet = 1,
range = "A1:B28")
colnames(xls) <- c("Estado","Populacao")
dados <- map[,c("woe-name","hc-a2")] %>% left_join(x=.,y=xls, by = c("woe-name" = "Estado"))
kabble(dados)
kable(dados)
knitr::kable(dados)
hcmap(map="countries/br/br-all",
name = "Brasil",
data = dados,
value = "Populacao",
joinBy = "hc-a2",
dataLabels = list(enabled = TRUE, format = '{point.hc-a2}'))
d <- diamonds[sample(nrow(diamonds), 1000), ]
library(ggplot2)
d <- diamonds[sample(nrow(diamonds), 1000), ]
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
p
p <- ggplot(data = d, aes(x = carat, y = price)) +
geom_point(aes(text = paste("Clarity:", clarity))) +
geom_smooth(aes(colour = cut, fill = cut)) + facet_wrap(~ cut)
ggplotly(p)
library(plotly)
ggplotly(p)
p <- gapminder %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
library(gapminder)
p
knitr::opts_chunk$set(echo = TRUE)
p <- gapminder %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
p
library(magrittr)
library(highcharter)
methods(hchart)
knitr::opts_chunk$set(echo = TRUE)
data(tips, package = 'reshape2')
data(diamonds, package = 'ggplot2')
hchart(diamonds$price, color="#0000FF") %>% hc_title(text = "Histograma")
hchart(tips$sex) %>% hc_title(text = "Gráfico de Barras") %>% hc_legend(enabled = F)
hchart(AirPassengers) %>% hc_title(text = "Série Temporal") %>% hc_legend(enabled = F)
highchart() %>%
hc_add_series(data = women$weight) %>%
hc_add_series(data = women$height)
highchart() %>%
hc_add_series(data = head(diamonds$depth,30), name = "depth", color = "red") %>%
hc_add_series(data = head(diamonds$price,30), name = "price", color = "blue")
data(citytemp)
hc <- highchart() %>%
hc_plotOptions(line = list(color = "blue",
marker = list(
fillColor = "white",
lineWidth = 2,
lineColor = NULL
)
)) %>%
hc_add_series(name = "Tokyo", data = citytemp$tokyo) %>%
hc_add_series(name = "London", data = citytemp$london,
marker = list(fillColor = "black"))
hc %>%
hc_add_series(name = "New York",
data = citytemp$new_york,
color = "red")
?citytemp
highchart() %>%
hc_add_series(data = density(rnorm(300)),
type = "area",
color = "white",
fillColor = "rgba(0,0,255,0.3)",
marker = list(lineColor = "red",
lineWidth = 2,
fillColor = "white")) %>%
hc_legend(enabled = F)
highchart() %>%
hc_chart(type ="column") %>%
hc_xAxis(categories = levels(tips$day)) %>%
hc_add_series(data = tapply(tips$total_bill,tips$day,sum))
hchart(tips, type="scatter",hcaes(x="total_bill", y="tip")) %>% hc_title(text = "Gráfico de Dispersão")
hchart(tips, type="scatter",hcaes(x="total_bill", y="tip", group="day")) %>% hc_title(text = "Gráfico de Dispersão por Grupo")
hchart(tips, type="scatter",hcaes(x="total_bill", y="tip", group="day")) %>% hc_title(text = "Gráfico de Dispersão por Grupo")
library(quantmod) # Pacote para carregar os dados do mercado financeiro
x <- getSymbols("IBM", auto.assign = FALSE)
x <- hchart(x)
x
di <- getSymbols("IBM", auto.assign = FALSE)
di <- dygraph(m) %>%
dyCandlestick()
library(dygraphs)
di <- dygraph(m) %>%
dyCandlestick()
di
di <- dygraph(m) %>%
dyCandlestick()
m <- getSymbols("IBM", auto.assign = FALSE)
di <- dygraph(m) %>%
dyCandlestick()
di
di <- tail(di, n = 32)
di
m <- getSymbols("IBM", auto.assign = FALSE)
m <- tail(m, n = 32)
di <- dygraph(m) %>%
dyCandlestick()
di
require(xts)
data(sample_matrix)
m <- tail(sample_matrix, n = 32)
di <- dygraph(m) %>%
dyCandlestick()
di
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(highcharter)
map <- get_data_from_map(download_map_data("countries/br/br-all"))
map2 <- download_map_data("countries/br/br-all")
xls <- readxl::read_xls(path = "estimativa_TCU_2018_20190213.xls",
sheet = 1,
range = "A1:B28")
colnames(xls) <- c("Estado","Populacao")
library(magrittr)
dados <- map[,c("woe-name","hc-a2")] %>% left_join(x=.,y=xls, by = c("woe-name" = "Estado"))
library(dplyr)
dados <- map[,c("woe-name","hc-a2")] %>% left_join(x=.,y=xls, by = c("woe-name" = "Estado"))
hcmap(map="countries/br/br-all",
name = "Brasil",
data = dados,
value = "Populacao",
joinBy = "hc-a2",
dataLabels = list(enabled = TRUE, format = '{point.hc-a2}'))
library(MASS)
data(unemployment)
hcmap("countries/us/us-all-all", data = unemployment,
name = "Unemployment", value = "value", joinBy = c("hc-key", "code"),
borderColor = "transparent") %>%
hc_colorAxis(dataClasses = color_classes(c(seq(0, 10, by = 2), 50))) %>%
hc_legend(layout = "vertical", align = "right",
floating = TRUE, valueDecimals = 0, valueSuffix = "%")
library(magrittr)
library(magrittr)
library(dygraphs)
x <- nottem
dygraph(x)
y <- USAccDeaths
dygraph(y) %>% dyRangeSelector()
library(magrittr)
library(dygraphs)
x <- nottem
dygraph(x)
y <- USAccDeaths
dygraph(y) %>% dyRangeSelector()
lungDeaths <- cbind(mdeaths, fdeaths)
x=dygraph(lungDeaths) %>% dyRangeSelector() %>% dyOptions(stackedGraph = TRUE)
x
require(xts)
data(sample_matrix)
m <- tail(sample_matrix, n = 32)
di <- dygraph(m) %>%
dyCandlestick()
di
